[build-system]
requires = ["setuptools", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "logly"
description = "Logly: A Fastest and Customizable Logging Utility for Python"
authors = [
  { name = "Muhammad Fiaz", email = "contact@muhammadfiaz.com" },
]
dynamic = ["version"]
requires-python = ">=3.9"
dependencies = ["colorama>=0.4.4", "pydantic>=1.8.2", "rich>=10.12.0"]

maintainers = [{name = "Muhammad Fiaz", email = "contact@muhammadfiaz.com"}]
keywords = ["logging", "logger", "logly", "logging-utility", "python", "logs"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3:: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Logging",
]
license = { file = "LICENSE" }
readme = { file = "README.md", content-type = "text/markdown" }

[project.urls]
Changelog = "https://github.com/muhammad-fiaz/logly/releases"
Documentation = "https://github.com/muhammad-fiaz/logly#readme"
Homepage = "https://github.com/muhammad-fiaz/logly.git"
IssueTracker = "https://github.com/muhammad-fiaz/logly/issues"
Repository = "https://github.com/muhammad-fiaz/logly.git"
PullRequests = "https://github.com/muhammad-fiaz/logly/pulls"

[tool.setuptools.packages.find]
include = ["logly*"]

[tool.setuptools_scm]
write_to = "logly/__version__.py"

[project.optional-dependencies]
dev = [
  "mypy==1.8.0",
  "pre-commit==4.0.0",
  "pytest==8.0.0",
  "pytest-cov==6.0.0",
  "ruff==0.3.4",
  "black==24.2.0",
  "isort==5.13.2",
  "tox==4.12.0",
  "coverage>=7.5.0",
  "hypothesis==6.99.0",
  "pytest-mock==3.12.0",
  "pytest-asyncio==0.23.5",
  "types-colorama",
  "types-pyyaml",
  "types-setuptools",
  "setuptools>=58.0.0",
  "setuptools-scm>=6.3.2",
]

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=logly --cov-report term-missing --no-cov-on-fail"

[tool.coverage.report]
exclude_lines = [
  "if __name__ == \"__main__\":",
  "pragma: no cover",
]

[tool.ruff]
line-length = 100
target-version = "py39"
fix = true

[tool.ruff.lint]
select = [
  "E",  # pycodestyle
  "B",  # flake8-bugbear
  "W",  # Warning
  "F",  # pyflakes
  "UP",  # pyupgrade
  "I001",  # unsorted-imports
  "T201",  # print found
  "T203",  # pprint found
  "RUF022",  # Unsorted __all__
  "RUF023",  # Unsorted __slots__
]
ignore = [
  "E501",   # Line too long
  "W191",   # Indentation contains tabs
  "E111",   # Indentation is not a multiple of four
  "E114",   # Indentation is not a multiple of four (comment)
  "E117",   # Over-indented
  "D206",   # Docstring indentation error
  "D300",   # Triple double quotes required
  "Q000",   # Bad quotes
  "Q001",   # Bad quotes
  "Q002",   # Bad quotes
  "Q003",   # Bad quotes
  "COM812", # Trailing comma missing
  "COM819", # Trailing comma unexpected
  "ISC001", # String concatenation error
  "ISC002", # String formatting issue
]